/*   Copyright 2019 ChemAxon Ltd.
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
 
        http://www.apache.org/licenses/LICENSE-2.0
 
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
 */

apply plugin: 'java-library'
apply plugin: 'application'

repositories {
    maven {
        url "${chemaxonRepositoryUrl}/libs-release"
        credentials {
            username = chemaxonRepositoryUser
            password = chemaxonRepositoryPassword
        }
    }
    mavenCentral()
}

dependencies {
    compile group: 'com.chemaxon', name: 'core', version: '+'
    compile group: 'com.chemaxon', name: 'io-all', version: '+'

	compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.10.0'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.0'

    implementation 'org.jetbrains:annotations:16.0.2'
}

task transferData(type: JavaExec)  {
    classpath = sourceSets.main.runtimeClasspath
    main = "com.chemaxon.example.TransferData"
    group = "TransferData"
    description = "Transfer data from molecule files to json for batch insert in JChem MicroServices"
    args loadFilesFromFolder()
}

def loadFilesFromFolder() {
    def inputDir = file('./input')
    if (!inputDir.exists() || !inputDir.isDirectory() || !(inputDir.listFiles())) {
        logger.warn('input folder is not available')
        return []
    }
    def files = file('./input').listFiles().sort()
    def names = files.findAll { File file -> file.isFile() && file.name != '.gitkeep' }.collect { it.absolutePath }
    logger.info("these files will be used: ${names}")
    return names
}
