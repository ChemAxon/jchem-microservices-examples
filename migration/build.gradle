/*
 * Copyright 2019-2025 Chemaxon Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

plugins {
    id 'java'
    id 'application'
}

checkIfSetupIsAcceptable()

repositories {
    maven {
        url = 'https://hub.chemaxon.com/artifactory/libs-release'
        credentials {
            username = cxnHubUser
            password = cxnHubApiKey
        }
    }
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

dependencies {
    implementation "com.chemaxon:io-all:${chemaxonReleaseVersion}"

    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
}

tasks.register('transferData', JavaExec) {
    group = 'transferdata'
    description = 'Transfers data from molecule files to json for batch insert in JChem Microservices'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.chemaxon.example.TransferData'
    args loadFilesFromFolder()
}

def loadFilesFromFolder() {
    def inputDir = file('./input')
    if (!inputDir.exists() || !inputDir.isDirectory() || !(inputDir.listFiles())) {
        logger.warn('Input folder is not available')
        return []
    }
    def files = file('./input').listFiles().sort()
    def names = files.findAll { File file -> file.isFile() && file.name != '.gitkeep' }.collect { it.absolutePath }
    logger.info("These files will be used: ${names}")
    return names
}

private void checkIfSetupIsAcceptable() {
    def missing = []
    appendMissing('cxnHubUser', missing)
    appendMissing('cxnHubApiKey', missing)
    if (!missing.isEmpty()) {
        throw new GradleException("The following settings are missing: ${missing}, please follow the guide here: https://chemaxon.com/products/jchem-engines/download#gradle-panel to find out your password and username, and add them to the gradle.properties file")
    }
}

private void appendMissing(String key, List<String> missingList) {
    if (!project.hasProperty(key) || !project[key]) {
        missingList << key
    }
}
